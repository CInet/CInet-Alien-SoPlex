Only in soplex-6.0.3-static/: build
diff -aur soplex-6.0.3/CMakeLists.txt soplex-6.0.3-static/CMakeLists.txt
--- soplex-6.0.3/CMakeLists.txt	2022-12-13 13:42:08.000000000 +0200
+++ soplex-6.0.3-static/CMakeLists.txt	2023-02-16 15:36:34.194407462 +0200
@@ -122,6 +122,8 @@
                           DEPENDENCIES soplex)
 endif()
 
+SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
+
 if(ZLIB)
     find_package(ZLIB)
 endif()
@@ -179,6 +181,7 @@
 endif()
 
 if(BOOST)
+    set(Boost_USE_STATIC_LIBS ON)
     find_package(Boost 1.65.0) # PaPILO requires at least Boost 1.65 (on mac 1.72)
     if(Boost_FOUND)
         set(SOPLEX_WITH_BOOST on)
@@ -232,7 +235,7 @@
 configure_file(${PROJECT_SOURCE_DIR}/soplex-config.cmake.in "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/soplex-config.cmake" @ONLY)
 
 add_subdirectory(src)
-add_subdirectory(tests/c_interface)
+#add_subdirectory(tests/c_interface)
 add_subdirectory(check)
 
 enable_testing()
diff -aur soplex-6.0.3/src/CMakeLists.txt soplex-6.0.3-static/src/CMakeLists.txt
--- soplex-6.0.3/src/CMakeLists.txt	2022-12-13 13:42:08.000000000 +0200
+++ soplex-6.0.3-static/src/CMakeLists.txt	2023-02-16 15:25:45.492437361 +0200
@@ -166,27 +166,27 @@
 target_link_libraries(libsoplex ${libs})
 
 # create C shared library
-add_library(libsoplexshared SHARED soplex_interface.cpp ${sources})
-if(MSVC)
-    setLibProperties(libsoplexshared "libsoplexshared")
-else()
-   setLibProperties(libsoplexshared "soplexshared")
-endif()
-
-set_target_properties(libsoplexshared PROPERTIES
-    VERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR}.${SOPLEX_VERSION_PATCH}.${SOPLEX_VERSION_SUB}
-    SOVERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR})
-add_dependencies(libsoplexshared soplex_update_githash libsoplex)
-if(MSVC)
-    target_compile_options(libsoplexshared PUBLIC "/Zc:__cplusplus")
-    setLibProperties(libsoplexshared "libsoplexshared")
-endif()
-target_include_directories(libsoplexshared PUBLIC
-    $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>
-    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
-    $<INSTALL_INTERFACE:include>)
-target_link_libraries(libsoplexshared libsoplex ${libs})
-set_target_properties(libsoplexshared PROPERTIES CXX_VISIBILITY_PRESET default)
+#add_library(libsoplexshared SHARED soplex_interface.cpp ${sources})
+#if(MSVC)
+#    setLibProperties(libsoplexshared "libsoplexshared")
+#else()
+#   setLibProperties(libsoplexshared "soplexshared")
+#endif()
+#
+#set_target_properties(libsoplexshared PROPERTIES
+#    VERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR}.${SOPLEX_VERSION_PATCH}.${SOPLEX_VERSION_SUB}
+#    SOVERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR})
+#add_dependencies(libsoplexshared soplex_update_githash libsoplex)
+#if(MSVC)
+#    target_compile_options(libsoplexshared PUBLIC "/Zc:__cplusplus")
+#    setLibProperties(libsoplexshared "libsoplexshared")
+#endif()
+#target_include_directories(libsoplexshared PUBLIC
+#    $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>
+#    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
+#    $<INSTALL_INTERFACE:include>)
+#target_link_libraries(libsoplexshared libsoplex ${libs})
+#set_target_properties(libsoplexshared PROPERTIES CXX_VISIBILITY_PRESET default)
 
 # create soplex binary using library without pic
 add_executable(soplex soplexmain.cpp)
@@ -208,14 +208,14 @@
 install(FILES soplex.h soplex.hpp soplex_interface.h DESTINATION include)
 
 # install the binary and the library to appropriate lcoations and add them to an export group
-install(TARGETS soplex libsoplex libsoplex-pic libsoplexshared EXPORT soplex-targets
+install(TARGETS soplex libsoplex libsoplex-pic EXPORT soplex-targets # libsoplexshared
         LIBRARY DESTINATION lib
         ARCHIVE DESTINATION lib
         RUNTIME DESTINATION bin
         INCLUDES DESTINATION include)
 
 # Add library targets to the build-tree export set
-export(TARGETS libsoplex libsoplex-pic libsoplexshared
+export(TARGETS libsoplex libsoplex-pic #libsoplexshared
   FILE "${CMAKE_BINARY_DIR}/soplex-targets.cmake")
 
 #configure the config file for the build tree
